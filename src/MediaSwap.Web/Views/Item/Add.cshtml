@model MediaSwap.Web.ViewModels.AddItemViewModel
@{
    ViewBag.Title = "Add Item";
}
<h2>
    Add @Model.ItemTypeName</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm("AddItem", "Item", FormMethod.Post, new { @class = "form-stacked" }))
{
    @Html.ValidationSummary(true)
<div>

        <div class="editor-label">
            @Html.Label("Name")
            @Html.EditorFor(model => model.ItemName)
            @Html.ValidationMessageFor(model => model.ItemName)
            @Html.LabelFor(model => model.AmazonId)
            @Html.EditorFor(model => model.AmazonId)
            @Html.ValidationMessageFor(model => model.AmazonId)
            @Html.Label("Format")
            <select id="ItemType_ItemTypeId" name="ItemType.ItemTypeId">
               @foreach (var itemType in Model.ItemTypes)
               {
               
                    <option value="@itemType.ItemTypeId" label ="@itemType.Format.FormatTypeName"></option>
               }
            
            </select>
            @if (!string.IsNullOrWhiteSpace(Model.Status))
            {
                <div class="alert-message info">
                @Model.Status
            </div>
            }
            
        <div class="form-actions">
            <input type="submit" class="btn btn-primary" value="Add" />
        </div>
        </div>
        </div>   
}
